Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression expression PLUS
Rule 2     expression -> expression expression MINUS
Rule 3     expression -> term
Rule 4     term -> expression expression TIMES
Rule 5     term -> expression expression DIVISION
Rule 6     term -> factor
Rule 7     factor -> NUMBER
Rule 8     factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

DIVISION             : 5
LPAREN               : 8
MINUS                : 2
NUMBER               : 7
PLUS                 : 1
RPAREN               : 8
TIMES                : 4
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 4 4 5 5 8 0
factor               : 6
term                 : 3

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression expression PLUS
    (2) expression -> . expression expression MINUS
    (3) expression -> . term
    (4) term -> . expression expression TIMES
    (5) term -> . expression expression DIVISION
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3

    term                           shift and go to state 1
    expression                     shift and go to state 5
    factor                         shift and go to state 4

state 1

    (3) expression -> term .

    RPAREN          reduce using rule 3 (expression -> term .)
    NUMBER          reduce using rule 3 (expression -> term .)
    LPAREN          reduce using rule 3 (expression -> term .)
    PLUS            reduce using rule 3 (expression -> term .)
    MINUS           reduce using rule 3 (expression -> term .)
    TIMES           reduce using rule 3 (expression -> term .)
    DIVISION        reduce using rule 3 (expression -> term .)
    $end            reduce using rule 3 (expression -> term .)


state 2

    (7) factor -> NUMBER .

    RPAREN          reduce using rule 7 (factor -> NUMBER .)
    NUMBER          reduce using rule 7 (factor -> NUMBER .)
    LPAREN          reduce using rule 7 (factor -> NUMBER .)
    PLUS            reduce using rule 7 (factor -> NUMBER .)
    MINUS           reduce using rule 7 (factor -> NUMBER .)
    TIMES           reduce using rule 7 (factor -> NUMBER .)
    DIVISION        reduce using rule 7 (factor -> NUMBER .)
    $end            reduce using rule 7 (factor -> NUMBER .)


state 3

    (8) factor -> LPAREN . expression RPAREN
    (1) expression -> . expression expression PLUS
    (2) expression -> . expression expression MINUS
    (3) expression -> . term
    (4) term -> . expression expression TIMES
    (5) term -> . expression expression DIVISION
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3

    term                           shift and go to state 1
    expression                     shift and go to state 6
    factor                         shift and go to state 4

state 4

    (6) term -> factor .

    RPAREN          reduce using rule 6 (term -> factor .)
    NUMBER          reduce using rule 6 (term -> factor .)
    LPAREN          reduce using rule 6 (term -> factor .)
    PLUS            reduce using rule 6 (term -> factor .)
    MINUS           reduce using rule 6 (term -> factor .)
    TIMES           reduce using rule 6 (term -> factor .)
    DIVISION        reduce using rule 6 (term -> factor .)
    $end            reduce using rule 6 (term -> factor .)


state 5

    (0) S' -> expression .
    (1) expression -> expression . expression PLUS
    (2) expression -> expression . expression MINUS
    (4) term -> expression . expression TIMES
    (5) term -> expression . expression DIVISION
    (1) expression -> . expression expression PLUS
    (2) expression -> . expression expression MINUS
    (3) expression -> . term
    (4) term -> . expression expression TIMES
    (5) term -> . expression expression DIVISION
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3

    term                           shift and go to state 1
    expression                     shift and go to state 7
    factor                         shift and go to state 4

state 6

    (8) factor -> LPAREN expression . RPAREN
    (1) expression -> expression . expression PLUS
    (2) expression -> expression . expression MINUS
    (4) term -> expression . expression TIMES
    (5) term -> expression . expression DIVISION
    (1) expression -> . expression expression PLUS
    (2) expression -> . expression expression MINUS
    (3) expression -> . term
    (4) term -> . expression expression TIMES
    (5) term -> . expression expression DIVISION
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 8
    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3

    term                           shift and go to state 1
    expression                     shift and go to state 7
    factor                         shift and go to state 4

state 7

    (1) expression -> expression expression . PLUS
    (2) expression -> expression expression . MINUS
    (4) term -> expression expression . TIMES
    (5) term -> expression expression . DIVISION
    (1) expression -> expression . expression PLUS
    (2) expression -> expression . expression MINUS
    (4) term -> expression . expression TIMES
    (5) term -> expression . expression DIVISION
    (1) expression -> . expression expression PLUS
    (2) expression -> . expression expression MINUS
    (3) expression -> . term
    (4) term -> . expression expression TIMES
    (5) term -> . expression expression DIVISION
    (6) term -> . factor
    (7) factor -> . NUMBER
    (8) factor -> . LPAREN expression RPAREN

    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 10
    DIVISION        shift and go to state 9
    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3

    term                           shift and go to state 1
    expression                     shift and go to state 7
    factor                         shift and go to state 4

state 8

    (8) factor -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    DIVISION        reduce using rule 8 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 8 (factor -> LPAREN expression RPAREN .)


state 9

    (5) term -> expression expression DIVISION .

    RPAREN          reduce using rule 5 (term -> expression expression DIVISION .)
    NUMBER          reduce using rule 5 (term -> expression expression DIVISION .)
    LPAREN          reduce using rule 5 (term -> expression expression DIVISION .)
    PLUS            reduce using rule 5 (term -> expression expression DIVISION .)
    MINUS           reduce using rule 5 (term -> expression expression DIVISION .)
    TIMES           reduce using rule 5 (term -> expression expression DIVISION .)
    DIVISION        reduce using rule 5 (term -> expression expression DIVISION .)
    $end            reduce using rule 5 (term -> expression expression DIVISION .)


state 10

    (4) term -> expression expression TIMES .

    RPAREN          reduce using rule 4 (term -> expression expression TIMES .)
    NUMBER          reduce using rule 4 (term -> expression expression TIMES .)
    LPAREN          reduce using rule 4 (term -> expression expression TIMES .)
    PLUS            reduce using rule 4 (term -> expression expression TIMES .)
    MINUS           reduce using rule 4 (term -> expression expression TIMES .)
    TIMES           reduce using rule 4 (term -> expression expression TIMES .)
    DIVISION        reduce using rule 4 (term -> expression expression TIMES .)
    $end            reduce using rule 4 (term -> expression expression TIMES .)


state 11

    (1) expression -> expression expression PLUS .

    RPAREN          reduce using rule 1 (expression -> expression expression PLUS .)
    NUMBER          reduce using rule 1 (expression -> expression expression PLUS .)
    LPAREN          reduce using rule 1 (expression -> expression expression PLUS .)
    PLUS            reduce using rule 1 (expression -> expression expression PLUS .)
    MINUS           reduce using rule 1 (expression -> expression expression PLUS .)
    TIMES           reduce using rule 1 (expression -> expression expression PLUS .)
    DIVISION        reduce using rule 1 (expression -> expression expression PLUS .)
    $end            reduce using rule 1 (expression -> expression expression PLUS .)


state 12

    (2) expression -> expression expression MINUS .

    RPAREN          reduce using rule 2 (expression -> expression expression MINUS .)
    NUMBER          reduce using rule 2 (expression -> expression expression MINUS .)
    LPAREN          reduce using rule 2 (expression -> expression expression MINUS .)
    PLUS            reduce using rule 2 (expression -> expression expression MINUS .)
    MINUS           reduce using rule 2 (expression -> expression expression MINUS .)
    TIMES           reduce using rule 2 (expression -> expression expression MINUS .)
    DIVISION        reduce using rule 2 (expression -> expression expression MINUS .)
    $end            reduce using rule 2 (expression -> expression expression MINUS .)

